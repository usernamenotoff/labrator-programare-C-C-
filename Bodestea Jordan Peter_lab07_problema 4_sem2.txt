/*Bodestean Jordan
Să se scrie o aplicaţie în care se modelează clasa Student cu nume, prenume, numar note si
notele din sesiunea din iarnă declarat printr-un pointer de tip int. Să se afişeze numele
studenţilor din grupă care au restanțe și apoi numele primilor 3 studenți din grupă în ordinea
mediilor, care se va afisa si ea.*/


#include<iostream>
#include<string.h>
using namespace std;

class student
{
private:int nota[7];
	   char prenume[20];
	   char nume[20];
	   int grupa;
	   int numar_note;

public:
	void setNota();
	int getNota();
	void Getdate();
	int getmedia();
		
	


	~student();
};

void student::setNota() {
	cout << "introduceti numele ";
	cin >> nume;
	cout << "introduceti prenumele ";
	cin >> prenume;
	cout << "introduceti nr de note: ";
	cin >> numar_note;
	int i;
	cout << "intrdoceti notele " << endl;
	for (i = 0; i < numar_note; i++) {
		cin >> nota[i];
		cout << endl;
	}

}
student::~student() {
	cout << "a fost folosit deconstructoru";
}
void student::Getdate() {
	cout << "numele= ";
	cout << nume << endl;
	cout << "prenumele= ";
	cout << prenume << endl;
	cout << "nr de note: " << numar_note;
	for (int i = 0; i < numar_note; i++)cout << "notele:"<<nota[i] << endl;
	
}
int student::getNota() {
	for (int i = 0; i < numar_note; i++)return nota[i];
}
int student::getmedia() {
	int s = 0;
	float media = 0;
	for (int i = 0; i < numar_note; i++) { s = s + nota[i]; }
	media = float(s / numar_note); 
	return media;


}



int comp(const void*a, const void*b) {
	student* p = (student*)a;
	student* c = (student*)b;
	return (c->getmedia() - p->getmedia());

	}



int main() {
	student p1[30];
	int n;
	cout << "introduceti nr de studednti" << endl;
	cin >> n;
	cout << endl;
	for (int i = 0; i <n; i++) {
		p1[i].setNota();
		
	}
	for (int i = 0; i < n; i++) {
		p1[i].Getdate();

	}
	cout << endl;
	cout << "elevii cu restantiere" << endl;
	for (int i = 0; i < n; i++) {
		if (p1[i].getmedia() < 5) {
			p1[i].Getdate();
		}
	}
	cout << endl;
	qsort(p1, n, sizeof(student), comp);
	cout << "primii 3 elevii ordonati descrescatori dupa medie" << endl;
	for (int i = 0; i < 3; i++) {
		p1[i].Getdate();
	}
	}

		