/* Bodestean Jordan
Implementaţi programul prezentat în exemplul 3 şi examinaţi eventualele erori date la compilare daca exista prin eliminarea comentariilor. Modificaţi programul astfel încât să se poată accesa din funcţia main( ), prin intermediul obiectului obiect_derivat, şi metodele aduna( ) şi scade( ) din clasa de baza pastrand mostenirea de tip private.*/

#include  <iostream>

using  namespace  std;

class  Baza  {
protected:  int  a,  b;
public:
        Baza()  {  a  =  1,  b  =  1;  }
        void  setA(int  a)  {
                this->a  =  a;
        }
        void  setB(int  b)  {
                this->b  =  b;
        }
        int  getA()  {
                return  a;
        }
        int  getB()  {
                return  b;
        }
        int  aduna()  {
                return  a  +  b;
        }
        int  scade()  {
                return  a  -  b;
        }
};

class  Derivata  :  private  Baza{
public:
        int  inmulteste()  {
                return  a  *  b;
        }
        int  aduna()  {
                return  a  +  b;
        }
        int  scade()  {
                return  a  -  b;
        }
};

int  main(){
        Baza  obiect_baza;
        cout  <<  "Afis  din  baza  (val.  initiale):  "  <<  obiect_baza.getA()  <<  "  "  <<  obiect_baza.getB()  <<  '\n';
        obiect_baza.setA(2);
        obiect_baza.setB(3);

        cout  <<  "Afis  din  baza  (redefinit):  "  <<  obiect_baza.getA()  <<  "  "  <<  obiect_baza.getB()  <<  '\n';
        Derivata  obiect_derivat;
        cout  <<  "\nProdusul  este  (din  derivat  cu  val.  initiale:  "  <<  obiect_derivat.inmulteste();
        obiect_derivat.scade();
        obiect_derivat.aduna();

        return 0;