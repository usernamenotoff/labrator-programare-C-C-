/*Bodestean Jordan-Denisa Trifon
 Folosind modelul claselor de la mostenirea publica, implementaţi două clase, astfel:
- clasa de bază contine metode pentru:
-codarea unui şir de caractere (printr-un algoritm oarecare- recomandat XOR cu o masca fixa) => public;
-afişarea şirului original şi a celui rezultat din transformare = > public;
- clasa derivata contine o metoda pentru:
-scrirea rezultatului codării într-un fişier, la sfârşitul acestuia.
Fiecare inregistrare are forma: nr_inregistrare: şir_codat;
Accesul la metodele ambelor clase se face prin intermediul unui obiect rezultat prin instanţierea clasei derivate. Programul care foloseşte clasele 
citeşte un şir de caractere de la tastatură şi apoi, în funcţie de opţiunea utilizatorului, afişează rezultatul codării sau îl scrie în fişier.*/
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <stdio.h>
using namespace std;

int contor = 1;
class Sir_Baze {
	char sir[20];
public:
	char* cripta();//functie ce cripteaza un sir de caractere
	void afisare_sir_initial();//functie ce afiseaza sirul initial
	void afisare_sir_cript(char[]);//functie ce afiseaza sirul criptat
	void setSir(char a[]) {
		strcpy(sir, a);
	}




};
char* Sir_Baze:: cripta() {
	char caracter = 'a';
	int nr_litere = strlen(sir);
	char sir_cript[20];
	for (int i = 0;i < nr_litere;i++) {
		sir_cript[i] = sir[i] ^ caracter;
	}
	return sir_cript;
}
void Sir_Baze::afisare_sir_initial() {
	cout << "\nSirul initial este " << sir;
}
void Sir_Baze::afisare_sir_cripta(char a[]) {
	cout << "\nSirul criptat este " << a;
}

class Sir_derivat :public Sir_Baze {//clasa derivata
public:
	void scriere_in_fisier() {//functie pentru scrierea in fisier
		int m;
		FILE *fisier;
		m = fopen_s(&fisier, "Text.txt", "w");
		if (m != 0) {//conditie care verifica daca fisierul a fost creat
			puts("\nFisierul nu s-a creat!");
			return;
		}
		else {
			fseek(fisier, 20, SEEK_END);
			fprintf(fisier, "\nIntrgistrarea nr %d : %s", contor, criptare());
		}
		fclose(fisier);

	}



};

int main() {
	Sir_derivat sir;
	char aux[20], caract;
	

	cout << "\nIntroduceti un sir de caractere:";
	cin >> aux;
	sir.setSir(aux);

	cout << "\nIntroduceti un caracter(s-afisarea sirului criptat,f-scrierea sirului criptat intr-un fisier,e-exit):";
	cin >> caract;
	switch (toupper(caract)) {
	case 'S': { sir.afisare_sir_cript(sir.cripta());break; }
	case 'F': { cout << "\nSirul cripatat a fost scris in fisier ";sir.scriere_in_fisier() ;contor++; break; }
	case 'E': return 0;
	}
}